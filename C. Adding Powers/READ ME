C. Adding Powers
2 seconds256 megabytesstandard inputstandard output


Suppose you are performing the following algorithm. There is an array 𝑣1,𝑣2,…,𝑣𝑛 filled with zeroes at start. The following operation is applied to the array several times — at 𝑖-th step (0-indexed) you can:

either choose position 𝑝𝑜𝑠 (1≤𝑝𝑜𝑠≤𝑛) and increase 𝑣𝑝𝑜𝑠 by 𝑘𝑖;
or not choose any position and skip this step.
You can choose how the algorithm would behave on each step and when to stop it. The question is: can you make array 𝑣 equal to the given array 𝑎 (𝑣𝑗=𝑎𝑗 for each 𝑗) after some step?

Input
The first line contains one integer 𝑇 (1≤𝑇≤1000) — the number of test cases. Next 2𝑇 lines contain test cases — two lines per test case.

The first line of each test case contains two integers 𝑛 and 𝑘 (1≤𝑛≤30, 2≤𝑘≤100) — the size of arrays 𝑣 and 𝑎 and value 𝑘 used in the algorithm.

The second line contains 𝑛 integers 𝑎1,𝑎2,…,𝑎𝑛 (0≤𝑎𝑖≤1016) — the array you'd like to achieve.

Output
For each test case print YES (case insensitive) if you can achieve the array 𝑎 after some step or NO (case insensitive) otherwise.

Example
inputCopy
5
4 100
0 0 0 0
1 2
1
3 4
1 4 1
3 2
0 1 3
3 9
0 59049 810
outputCopy
YES
YES
NO
NO
YES
Note
In the first test case, you can stop the algorithm before the 0-th step, or don't choose any position several times and stop the algorithm.

In the second test case, you can add 𝑘0 to 𝑣1 and stop the algorithm.

In the third test case, you can't make two 1 in the array 𝑣.

In the fifth test case, you can skip 90 and 91, then add 92 and 93 to 𝑣3, skip 94 and finally, add 95 to 𝑣2.

;
